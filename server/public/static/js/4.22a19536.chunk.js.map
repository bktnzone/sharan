{"version":3,"sources":["../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Card.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","className","a","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","Object","classes","createElement","ref","defaultProps","__webpack_exports__","inverse","bool","color","block","body","outline","Card","freeGlobal","freeSelf","self","root","Function","module","exports","isArray","Array","baseIsNative","getValue","key","value","undefined","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","get","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","process","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","source","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_API_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","RegExp","replace","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/4.22a19536.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}